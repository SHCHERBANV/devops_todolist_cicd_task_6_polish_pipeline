name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }} - ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Python version to use'
        required: true
        default: '3.8'
      os-type:
        description: 'Operating System to use'
        required: true
        default: 'ubuntu-latest'

env:
  PythonVersion: 3.8
  DockerImageName: todoapp

jobs:
  python-ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9']
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test

      - name: Generate Report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: |
          flake8 . --show-source --statistics --exit-zero

      - name: Check Complexity
        run: |
          flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts-${{ github.run_id }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: .
        # Ensures unique artifact name by combining run_id, OS, and Python version.

      - name: Upload helm artifacts
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts-${{ github.run_id }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: ${{ github.workspace }}/helm-charts
        # Ensures unique artifact name for Helm artifacts.

      - name: Upload kind cluster artifact
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: kind-cluster-${{ github.run_id }}-${{ matrix.os }}-${{ matrix.python-version }}
          path: ${{ github.workspace }}/cluster.yml
        # Ensures unique artifact name for kind cluster artifact.

  docker-ci:
    name: Build and Push Image
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    needs: python-ci
    steps:

    - uses: actions/download-artifact@v4
      name: Download python artifacts
      with:
        name: python-artifacts-${{ github.run_id }}-ubuntu-latest-3.8
        path: .
      # Modified to download the uniquely named python artifacts for `ubuntu-latest` and `3.8`.

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: ./src
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

helm-ci:
  runs-on: ubuntu-latest
  needs: python-ci
  if: github.ref_name == 'main'
  name: Helm CI
  steps:
  - name: Set Up Helm
    uses: azure/setup-helm@v4.2.0

  - name: Lint Helm
    run: helm lint ./todoapp/

  - name: Template Helm
    run: helm template todoapp ./todoapp/ -f ./todoapp/values.yaml

  - name: Package Helm
    run: helm package ./todoapp

  - name: Upload Helm Artifact
    uses: actions/upload-artifact@v4
    with:
      name: helm-package-${{ github.sha }}  # Use SHA for uniqueness
      path: ./*.tgz

deploy-helm-dev:
  name: Deploy Helm to Development
  runs-on: ubuntu-latest
  needs: [helm-ci, docker-ci]
  secrets: inherit

  steps:
  - name: Download Helm Package Artifact
    uses: actions/download-artifact@v4
    with:
      name: helm-package-${{ github.sha }}  # Ensure it matches the uploaded name
      path: .

  - name: Deploy Helm to Development
    uses: ./.github/workflows/reusable-deployment.yml
    with:
      environment: development
      version: ${{ github.sha }}
      helm-values-path: ${{ github.event.inputs.helm-values-path }}
      helm-release-name: ${{ github.event.inputs.helm-release-name }}

deploy-helm-stg:
  name: Deploy Helm to Staging
  runs-on: ubuntu-latest
  needs: [deploy-helm-dev]
  secrets: inherit

  steps:
  - name: Download Helm Package Artifact
    uses: actions/download-artifact@v4
    with:
      name: helm-package-${{ github.sha }}  # Ensure it matches the uploaded name
      path: .

  - name: Deploy Helm to Staging
    uses: ./.github/workflows/reusable-deployment.yml
    with:
      environment: staging
      version: ${{ github.sha }}
      helm-values-path: ./todoapp/values/stg.yaml
      helm-release-name: todoapp-staging
